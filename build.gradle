plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.blogproject'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt // 별도의 configuration으로 정의
}

repositories {
	mavenCentral()
}

ext {
	asciidocVersion = "3.0.0"
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// REST Docs 관련 dependencies
	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

	// jwt 관련 dependencies
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto
	// 비밀번호 암호화 crypto
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

	// querydsl
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	// 스프링 시큐리티 JDBC 세션
	implementation 'org.springframework.session:spring-session-jdbc'

	// 테스트에서도 롬복을 사용하기 위해서 추가
	testCompileOnly "org.projectlombok:lombok"
	testAnnotationProcessor "org.projectlombok:lombok"
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

asciidoctor.doFirst {
	delete file("src/main/resources/static/docs")
}

bootJar {
	dependsOn asciidoctor
	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}